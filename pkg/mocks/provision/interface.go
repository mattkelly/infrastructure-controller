// Code generated by mockery v1.0.0. DO NOT EDIT.

package provision

import mock "github.com/stretchr/testify/mock"
import provision "github.com/containership/csctl/cloud/provision"
import rest "github.com/containership/csctl/cloud/rest"

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// AutoscalingPolicies provides a mock function with given fields: organizationID, clusterID
func (_m *Interface) AutoscalingPolicies(organizationID string, clusterID string) provision.AutoscalingPolicyInterface {
	ret := _m.Called(organizationID, clusterID)

	var r0 provision.AutoscalingPolicyInterface
	if rf, ok := ret.Get(0).(func(string, string) provision.AutoscalingPolicyInterface); ok {
		r0 = rf(organizationID, clusterID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(provision.AutoscalingPolicyInterface)
		}
	}

	return r0
}

// CKEClusters provides a mock function with given fields: organizationID
func (_m *Interface) CKEClusters(organizationID string) provision.CKEClusterInterface {
	ret := _m.Called(organizationID)

	var r0 provision.CKEClusterInterface
	if rf, ok := ret.Get(0).(func(string) provision.CKEClusterInterface); ok {
		r0 = rf(organizationID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(provision.CKEClusterInterface)
		}
	}

	return r0
}

// NodePools provides a mock function with given fields: organizationID, clusterID
func (_m *Interface) NodePools(organizationID string, clusterID string) provision.NodePoolInterface {
	ret := _m.Called(organizationID, clusterID)

	var r0 provision.NodePoolInterface
	if rf, ok := ret.Get(0).(func(string, string) provision.NodePoolInterface); ok {
		r0 = rf(organizationID, clusterID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(provision.NodePoolInterface)
		}
	}

	return r0
}

// Nodes provides a mock function with given fields: organizationID, clusterID, nodePoolID
func (_m *Interface) Nodes(organizationID string, clusterID string, nodePoolID string) provision.NodeInterface {
	ret := _m.Called(organizationID, clusterID, nodePoolID)

	var r0 provision.NodeInterface
	if rf, ok := ret.Get(0).(func(string, string, string) provision.NodeInterface); ok {
		r0 = rf(organizationID, clusterID, nodePoolID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(provision.NodeInterface)
		}
	}

	return r0
}

// RESTClient provides a mock function with given fields:
func (_m *Interface) RESTClient() rest.Interface {
	ret := _m.Called()

	var r0 rest.Interface
	if rf, ok := ret.Get(0).(func() rest.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rest.Interface)
		}
	}

	return r0
}

// Templates provides a mock function with given fields: organizationID
func (_m *Interface) Templates(organizationID string) provision.TemplateInterface {
	ret := _m.Called(organizationID)

	var r0 provision.TemplateInterface
	if rf, ok := ret.Get(0).(func(string) provision.TemplateInterface); ok {
		r0 = rf(organizationID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(provision.TemplateInterface)
		}
	}

	return r0
}
